// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum AccountStatus {
  active
  banned
}

model User {
  id String @id @default(cuid())
  publicAddress String @unique @map("public_address")
  status AccountStatus
  minecraftAccounts MinecraftAccount[]
  referrals UserReferral[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([status])
}

model MinecraftAccount {
  id String @id @default(cuid())
  mojangUUID String @unique @map("mojang_uuid")
  username String @unique

  userId String? @map("user_id")
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  referral UserReferral?

  status AccountStatus @default(active)

  @@index([userId])
  @@index([status])
}

enum ReferralStatus {
  pending
  accepted
  expired
}

model UserReferral {
  id String @id @default(cuid())
  code String @unique
  referredById String @map("referred_by_user_id")
  referredBy User @relation(fields: [referredById], references: [publicAddress], onDelete: Cascade, onUpdate: Cascade)

  username String
  mojangUUID String @unique @map("mojang_uuid")
  status ReferralStatus @default(pending)

  referredAccountId String? @unique @map("referred_account_id")
  referredAccount MinecraftAccount? @relation(fields: [referredAccountId], references: [username], onUpdate: Cascade, onDelete: SetNull)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  expiresAt DateTime? @map("expires_at")

  @@index([referredById])
}